// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Game");
                });

            modelBuilder.Entity("ApplicationCore.Entities.GameGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("GameId", "GenreId")
                        .IsUnique();

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("ApplicationCore.Entities.GamePlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.HasIndex("GameId", "PlatformId")
                        .IsUnique();

                    b.ToTable("GamePlatform");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70a7985d-c5f7-422d-8e0a-60ccd5a2d5c5"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("b2118695-7fed-4f8d-96c6-16c43197893b"),
                            Name = "RTS",
                            ParentGenreId = new Guid("70a7985d-c5f7-422d-8e0a-60ccd5a2d5c5")
                        },
                        new
                        {
                            Id = new Guid("a7df6eff-eb9b-4060-98ae-2ae992310636"),
                            Name = "TBS",
                            ParentGenreId = new Guid("70a7985d-c5f7-422d-8e0a-60ccd5a2d5c5")
                        },
                        new
                        {
                            Id = new Guid("83fb2bcb-6f66-4f1a-ba38-2cf277bd8986"),
                            Name = "RPG",
                            ParentGenreId = new Guid("70a7985d-c5f7-422d-8e0a-60ccd5a2d5c5")
                        },
                        new
                        {
                            Id = new Guid("9b8b4c45-d2e2-4244-a0a2-915cd8e4c682"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("2ab83c0d-1a9d-43d3-a960-99bc91c84d79"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("73ec0b86-bd7e-4d19-b52d-f0a9ebe810d2"),
                            Name = "Rally",
                            ParentGenreId = new Guid("2ab83c0d-1a9d-43d3-a960-99bc91c84d79")
                        },
                        new
                        {
                            Id = new Guid("b2ecde0e-3a56-4aea-afdf-47655ac23f34"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("2ab83c0d-1a9d-43d3-a960-99bc91c84d79")
                        },
                        new
                        {
                            Id = new Guid("c35d7d00-a2fc-4c0f-baa5-2f005faeb214"),
                            Name = "Formula",
                            ParentGenreId = new Guid("2ab83c0d-1a9d-43d3-a960-99bc91c84d79")
                        },
                        new
                        {
                            Id = new Guid("364c543d-60ad-446a-b091-c9050d8cc531"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("2ab83c0d-1a9d-43d3-a960-99bc91c84d79")
                        },
                        new
                        {
                            Id = new Guid("0bfe4c2e-5e56-4b9f-a5ec-c9217f9fca41"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("93e975b7-41ad-4aa4-a7f0-98939c47209d"),
                            Name = "FPS",
                            ParentGenreId = new Guid("0bfe4c2e-5e56-4b9f-a5ec-c9217f9fca41")
                        },
                        new
                        {
                            Id = new Guid("a1e4a456-2a14-4cbf-9940-3a44992deea7"),
                            Name = "TPS",
                            ParentGenreId = new Guid("0bfe4c2e-5e56-4b9f-a5ec-c9217f9fca41")
                        },
                        new
                        {
                            Id = new Guid("b5f24fb1-960f-48fd-b4ba-03d82418b6b3"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("5741f683-e872-4f6a-b353-3340cf50273d"),
                            Name = "Puzzle & Skill"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platform");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de71aa97-e64e-4ec5-9bb4-d29cac55adf2"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("319c88ae-6918-4b8a-a042-97477e099825"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("809f8c4c-7ff1-4999-8e5f-8741fccccf62"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("2e0aea16-17c8-4e0e-bb91-c1cc503f4f5c"),
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.GameGenre", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Game", "Game")
                        .WithMany("Genres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("ApplicationCore.Entities.GamePlatform", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Game", "Game")
                        .WithMany("Platforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Game", b =>
                {
                    b.Navigation("Genres");

                    b.Navigation("Platforms");
                });
#pragma warning restore 612, 618
        }
    }
}
